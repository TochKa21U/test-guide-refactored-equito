const algosdk = require('algosdk');
const ethers = require('ethers');

// Helper function
const fs = require('fs');

async function updateEnv(variable_name,newMnemonic){
  try {
    // Read the .env file contents
    const content = await fs.promises.readFile('.env', 'utf8');
    const lines = content.split('\n');
    const existingIndex = lines.findIndex((line) => line.startsWith(`${variable_name}=`));

    if (existingIndex !== -1) {
      lines[existingIndex] = `${variable_name}=${newMnemonic}`;
    } else {
      lines.push(`${variable_name}=${newMnemonic}`);
    }

    await fs.promises.writeFile('.env', lines.join('\n'), 'utf8');

    console.log('MNEMONIC updated successfully in .env file!');
  } catch (error) {
    console.error('Error updating .env file:', error);
  }
};

// updateEnv();

// Generate account 

var keys = algosdk.generateAccount();
// Secret keys to mnemonic
var mnemonic = algosdk.secretKeyToMnemonic(keys.sk);

let randomWallet = ethers.Wallet.createRandom();

//  CONSOLE LOGS BELOW FOR THE DETAILS OF THE WALLET

// console.log(`Mnemonic Phrase : ${mnemonic}`);
// console.log("New Eth wallet : ");
// console.log(randomWallet);
// console.log("\nPrivate key for ETH wallet :");
// console.log(randomWallet.privateKey);
// console.log("\Public key for ETH wallet :");
// console.log(randomWallet.publicKey);
// console.log("\Public key for ALGO wallet :");
// console.log(keys.addr);


console.log("\n\n--------------------------------------------------------------------------------------------------------");
console.log("Now please head to https://bank.testnet.algorand.network/ and enter your ALGO wallet address");
console.log(`Your ALGO wallet address is : ${keys.addr}`);
console.log("\nNow also please head to https://goerlifaucet.com/ and enter your ETH wallet address\nPlease note that You need to have AT LEAST 0.001 ON THE MAINNET IN ORDER TO USE THIS FEATURE. If you dont have the required funds on the wallet either change your wallet address with the one you have, or transfer the required funds to your account!\n");
console.log(`Your WALLET PUBLIC wallet address is : ${randomWallet.address}`);
console.log("\nNow also please head to https://testnet.binance.org/faucet-smart and enter your ETH wallet address");
console.log(`Your PUBLIC wallet address is : ${randomWallet.address}`);
const etherium_rpc_link = "";
const bnb_rpc_link = "";

const SAVE_ENABLED=0; // Set true // 1 for enabling auto saving to env variable



if(SAVE_ENABLED){
    updateEnv('ALGO_WALLET_MNEMONIC',mnemonic).then(res=>{
        console.log('Environment variable for ALGO_WALLET_MNEMONIC has been updated successfully!');
    }).catch(err=>{
        console.error("En error occured during the saving to the .env file");
        console.error(err);
    })
    updateEnv('ETH_WALLET_PRIVATE_KEY',withoutIndicator0X).then(res=>{
        console.log('Environment variable for ETH_WALLET_PRIVATE_KEY has been updated successfully!');
    }).catch(err=>{
        console.error("En error occured during the saving to the .env file");
        console.error(err);
    })
    updateEnv('BNB_WALLET_PRIVATE_KEY',withoutIndicator0X).then(res=>{
        console.log('Environment variable for ETH_WALLET_PRIVATE_KEY has been updated successfully!');
    }).catch(err=>{
        console.error("En error occured during the saving to the .env file");
        console.error(err);
    })
    if(etherium_rpc_link){
        updateEnv('ETH_ENDPOINT',etherium_rpc_link).then(res=>{
            console.log('Environment variable for ETH_ENDPOINT has been updated successfully!');
        }).catch(err=>{
            console.error("En error occured during the saving to the .env file");
            console.error(err);
        })
        updateEnv('ETH_MAINNET_ENDPOINT',etherium_rpc_link).then(res=>{
            console.log('Environment variable for ETH_ENDPOINT has been updated successfully!');
        }).catch(err=>{
            console.error("En error occured during the saving to the .env file");
            console.error(err);
        })
    }
    if(bnb_rpc_link){
        updateEnv('ETH_ENDPOINT',bnb_rpc_link).then(res=>{
            console.log('Environment variable for ETH_ENDPOINT has been updated successfully!');
        }).catch(err=>{
            console.error("En error occured during the saving to the .env file");
            console.error(err);
        })
        updateEnv('ETH_MAINNET_ENDPOINT',bnb_rpc_link).then(res=>{
            console.log('Environment variable for ETH_ENDPOINT has been updated successfully!');
        }).catch(err=>{
            console.error("En error occured during the saving to the .env file");
            console.error(err);
        })
    }
}

